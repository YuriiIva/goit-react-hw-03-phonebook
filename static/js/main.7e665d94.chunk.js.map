{"version":3,"sources":["components/Contacts /contacts.module.css","components/InputContacts/InputContacts.module.css","components/Contacts /Contacts .jsx","components/FindContacts/FindContacts.jsx","components/InputContacts/InputContacts.jsx","services/localStorage.js","components/App/App.jsx","index.js","components/FindContacts/FindContacts.module.css"],"names":["module","exports","Contacts","items","onDaleteCard","map","name","number","id","className","s","item","type","onClick","btn","FindContacts","onFilterChange","value","title","action","htmlFor","find","input","onChange","e","target","INITIAL_STATE","InputContacts","state","handleChange","setState","nanoid","handleSubmit","preventDefault","props","mainContacts","some","alert","onSubmit","reset","form","this","label","pattern","required","button","Component","get","key","JSON","parse","localStorage","getItem","error","CONTACTS_KEY","App","contacts","filter","componentDidMount","sevedContacts","addContacts","newContacts","prevState","handleFilterChange","getFilterContacts","contact","toLowerCase","includes","idDelete","prevProps","setItem","stringify","save","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e665d94.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"contacts_item__2tTD7\",\"btn\":\"contacts_btn__3HcCm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"InputContacts_form__GZK3_\",\"label\":\"InputContacts_label__1aefF\",\"button\":\"InputContacts_button__1_9Jn\",\"title\":\"InputContacts_title__3eXMi\"};","import s from \"./contacts.module.css\";\nimport { PropTypes } from \"prop-types\";\n\nconst Contacts = ({ items, onDaleteCard }) => {\n  return (\n    <div>\n      <ul>\n        {items.map(({ name, number, id }) => (\n          <li key={id} className={s.item}>\n            <p>\n              {name}:{number}\n            </p>\n            <button\n              type=\"submit\"\n              onClick={() => onDaleteCard(id)}\n              className={s.btn}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nContacts.propTypes = {\n  items: PropTypes.array,\n  onDaleteCard: PropTypes.func,\n};\nexport default Contacts;\n","import s from \"./FindContacts.module.css\";\nimport { PropTypes } from \"prop-types\";\n\nconst FindContacts = ({ onFilterChange, value }) => {\n  return (\n    <div>\n      <h2 className={s.title}>Contacts</h2>\n\n      <form action=\"\">\n        <label htmlFor=\"\" className={s.find}>\n          Finde contacts by name\n          <input\n            type=\"text\"\n            className={s.input}\n            value={value}\n            onChange={(e) => onFilterChange(e.target.value)}\n          />\n        </label>\n      </form>\n    </div>\n  );\n};\n\nFindContacts.propTypes = {\n  onFilterChange: PropTypes.func,\n  value: PropTypes.string,\n};\n\nexport default FindContacts;\n","import s from \"./InputContacts.module.css\";\nimport { Component } from \"react\";\nimport { nanoid } from \"nanoid\";\n\nconst INITIAL_STATE = {\n  name: \"\",\n  number: \"\",\n  id: \"\",\n};\n\nclass InputContacts extends Component {\n  state = { ...INITIAL_STATE };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n      id: nanoid(5),\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault(\"e.target.value\", e.target.value);\n    this.props.mainContacts.some(({ name }) => name === this.state.name)\n      ? alert(`${this.state.name} is alredy in contact`)\n      : this.props.onSubmit({ ...this.state });\n    this.reset();\n  };\n\n  reset = () => this.setState({ ...INITIAL_STATE });\n\n  render() {\n    return (\n      <div>\n        <h1 className={s.title}>Phonebook</h1>\n        <form className={s.form} onSubmit={this.handleSubmit}>\n          <label htmlFor=\"\" className={s.label}>\n            name\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              onChange={this.handleChange}\n              required\n            />\n          </label>\n          <label htmlFor=\"\" className={s.label}>\n            number\n            <input\n              type=\"tel\"\n              name=\"number\"\n              value={this.state.number}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              onChange={this.handleChange}\n              required\n            />\n          </label>\n\n          <button type=\"submit\" className={s.button}>\n            add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default InputContacts;\n","const save = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (error) {\n    return null;\n  }\n};\n\nconst get = (key) => {\n  try {\n    return JSON.parse(localStorage.getItem(key));\n  } catch (error) {\n    return null;\n  }\n};\n\nconst remove = (key) => {\n  try {\n    return localStorage.removeItem(key);\n  } catch (error) {\n    return null;\n  }\n};\n\nexport { get, save, remove };\n","import { Component } from \"react\";\nimport Contacts from \"../Contacts /Contacts \";\nimport FindContacts from \"../FindContacts/FindContacts\";\nimport InputContacts from \"../InputContacts/InputContacts\";\n\nimport { get, save, remove } from \"../../services/localStorage\";\n\nconst CONTACTS_KEY = \"contacts\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidMount = () => {\n    const sevedContacts = get(CONTACTS_KEY);\n    if (sevedContacts) {\n      this.setState({ contacts: sevedContacts });\n    }\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (prevState.contacts !== contacts) {\n      save(CONTACTS_KEY, contacts);\n    }\n  }\n\n  addContacts = (newContacts) => {\n    this.setState((prevState) => ({\n      contacts: [...prevState.contacts, newContacts],\n    }));\n  };\n\n  handleFilterChange = (value) => {\n    this.setState({ filter: value });\n  };\n\n  getFilterContacts = () => {\n    return this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(this.state.filter.toLowerCase())\n    );\n  };\n  onDaleteCard = (idDelete) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(({ id }) => id !== idDelete),\n    }));\n  };\n\n  render() {\n    return (\n      <div>\n        <InputContacts\n          onSubmit={this.addContacts}\n          mainContacts={this.state.contacts}\n        />\n        <FindContacts\n          onFilterChange={this.handleFilterChange}\n          value={this.state.filter}\n        />\n        <Contacts\n          items={this.getFilterContacts()}\n          onDaleteCard={this.onDaleteCard}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"find\":\"FindContacts_find__372A-\",\"input\":\"FindContacts_input__4fWyi\",\"title\":\"FindContacts_title__-IvSF\"};"],"sourceRoot":""}